{"version":3,"file":"index.cjs.js","mappings":";;;;;;;AAAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["../external node-commonjs \"child_process\"","../external node-commonjs \"crypto\"","../external node-commonjs \"http\"","../external node-commonjs \"http2\"","../external node-commonjs \"stream\"","../webpack/bootstrap","../webpack/runtime/compat",".././.tsup/index.cjs"],"sourcesContent":["module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"http\");","module.exports = require(\"http2\");","module.exports = require(\"stream\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __pow = Math.pow;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar __privateMethod = (obj, member, method) => (__accessCheck(obj, member, \"access private method\"), method);\nvar __privateWrapper = (obj, member, setter, getter) => ({\n  set _(value) {\n    __privateSet(obj, member, value, setter);\n  },\n  get _() {\n    return __privateGet(obj, member, getter);\n  }\n});\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// node_modules/.pnpm/@hono+node-server@1.14.0_hono@4.7.5/node_modules/@hono/node-server/dist/index.mjs\nvar import_http = require(\"http\");\nvar import_http2 = require(\"http2\");\nvar import_stream = require(\"stream\");\nvar import_crypto = __toESM(require(\"crypto\"), 1);\nvar _a;\nvar RequestError = (_a = class extends Error {\n  constructor(message, options) {\n    super(message, options);\n  }\n}, __publicField(_a, \"name\", \"RequestError\"), _a);\nvar toRequestError = (e) => {\n  if (e instanceof RequestError) {\n    return e;\n  }\n  return new RequestError(e.message, { cause: e });\n};\nvar GlobalRequest = global.Request;\nvar Request2 = class extends GlobalRequest {\n  constructor(input, options) {\n    var _a13, _b2;\n    if (typeof input === \"object\" && getRequestCache in input) {\n      input = input[getRequestCache]();\n    }\n    if (typeof ((_a13 = options == null ? void 0 : options.body) == null ? void 0 : _a13.getReader) !== \"undefined\") {\n      ;\n      (_b2 = options.duplex) != null ? _b2 : options.duplex = \"half\";\n    }\n    super(input, options);\n  }\n};\nvar newRequestFromIncoming = (method, url, incoming, abortController) => {\n  const headerRecord = [];\n  const rawHeaders = incoming.rawHeaders;\n  for (let i = 0; i < rawHeaders.length; i += 2) {\n    const { [i]: key, [i + 1]: value } = rawHeaders;\n    if (key.charCodeAt(0) !== /*:*/\n    58) {\n      headerRecord.push([key, value]);\n    }\n  }\n  const init = {\n    method,\n    headers: headerRecord,\n    signal: abortController.signal\n  };\n  if (method === \"TRACE\") {\n    init.method = \"GET\";\n    const req = new Request2(url, init);\n    Object.defineProperty(req, \"method\", {\n      get() {\n        return \"TRACE\";\n      }\n    });\n    return req;\n  }\n  if (!(method === \"GET\" || method === \"HEAD\")) {\n    if (\"rawBody\" in incoming && incoming.rawBody instanceof Buffer) {\n      init.body = new ReadableStream({\n        start(controller) {\n          controller.enqueue(incoming.rawBody);\n          controller.close();\n        }\n      });\n    } else {\n      init.body = import_stream.Readable.toWeb(incoming);\n    }\n  }\n  return new Request2(url, init);\n};\nvar getRequestCache = Symbol(\"getRequestCache\");\nvar requestCache = Symbol(\"requestCache\");\nvar incomingKey = Symbol(\"incomingKey\");\nvar urlKey = Symbol(\"urlKey\");\nvar abortControllerKey = Symbol(\"abortControllerKey\");\nvar getAbortController = Symbol(\"getAbortController\");\nvar requestPrototype = {\n  get method() {\n    return this[incomingKey].method || \"GET\";\n  },\n  get url() {\n    return this[urlKey];\n  },\n  [getAbortController]() {\n    this[getRequestCache]();\n    return this[abortControllerKey];\n  },\n  [getRequestCache]() {\n    this[abortControllerKey] || (this[abortControllerKey] = new AbortController());\n    return this[requestCache] || (this[requestCache] = newRequestFromIncoming(\n      this.method,\n      this[urlKey],\n      this[incomingKey],\n      this[abortControllerKey]\n    ));\n  }\n};\n[\n  \"body\",\n  \"bodyUsed\",\n  \"cache\",\n  \"credentials\",\n  \"destination\",\n  \"headers\",\n  \"integrity\",\n  \"mode\",\n  \"redirect\",\n  \"referrer\",\n  \"referrerPolicy\",\n  \"signal\",\n  \"keepalive\"\n].forEach((k) => {\n  Object.defineProperty(requestPrototype, k, {\n    get() {\n      return this[getRequestCache]()[k];\n    }\n  });\n});\n[\"arrayBuffer\", \"blob\", \"clone\", \"formData\", \"json\", \"text\"].forEach((k) => {\n  Object.defineProperty(requestPrototype, k, {\n    value: function() {\n      return this[getRequestCache]()[k]();\n    }\n  });\n});\nObject.setPrototypeOf(requestPrototype, Request2.prototype);\nvar newRequest = (incoming, defaultHostname) => {\n  const req = Object.create(requestPrototype);\n  req[incomingKey] = incoming;\n  const incomingUrl = incoming.url || \"\";\n  if (incomingUrl[0] !== \"/\" && // short-circuit for performance. most requests are relative URL.\n  (incomingUrl.startsWith(\"http://\") || incomingUrl.startsWith(\"https://\"))) {\n    if (incoming instanceof import_http2.Http2ServerRequest) {\n      throw new RequestError(\"Absolute URL for :path is not allowed in HTTP/2\");\n    }\n    try {\n      const url2 = new URL(incomingUrl);\n      req[urlKey] = url2.href;\n    } catch (e) {\n      throw new RequestError(\"Invalid absolute URL\", { cause: e });\n    }\n    return req;\n  }\n  const host = (incoming instanceof import_http2.Http2ServerRequest ? incoming.authority : incoming.headers.host) || defaultHostname;\n  if (!host) {\n    throw new RequestError(\"Missing host header\");\n  }\n  let scheme;\n  if (incoming instanceof import_http2.Http2ServerRequest) {\n    scheme = incoming.scheme;\n    if (!(scheme === \"http\" || scheme === \"https\")) {\n      throw new RequestError(\"Unsupported scheme\");\n    }\n  } else {\n    scheme = incoming.socket && incoming.socket.encrypted ? \"https\" : \"http\";\n  }\n  const url = new URL(`${scheme}://${host}${incomingUrl}`);\n  if (url.hostname.length !== host.length && url.hostname !== host.replace(/:\\d+$/, \"\")) {\n    throw new RequestError(\"Invalid host header\");\n  }\n  req[urlKey] = url.href;\n  return req;\n};\nfunction writeFromReadableStream(stream2, writable) {\n  if (stream2.locked) {\n    throw new TypeError(\"ReadableStream is locked.\");\n  } else if (writable.destroyed) {\n    stream2.cancel();\n    return;\n  }\n  const reader = stream2.getReader();\n  writable.on(\"close\", cancel);\n  writable.on(\"error\", cancel);\n  reader.read().then(flow, cancel);\n  return reader.closed.finally(() => {\n    writable.off(\"close\", cancel);\n    writable.off(\"error\", cancel);\n  });\n  function cancel(error) {\n    reader.cancel(error).catch(() => {\n    });\n    if (error) {\n      writable.destroy(error);\n    }\n  }\n  function onDrain() {\n    reader.read().then(flow, cancel);\n  }\n  function flow({ done, value }) {\n    try {\n      if (done) {\n        writable.end();\n      } else if (!writable.write(value)) {\n        writable.once(\"drain\", onDrain);\n      } else {\n        return reader.read().then(flow, cancel);\n      }\n    } catch (e) {\n      cancel(e);\n    }\n  }\n}\nvar buildOutgoingHttpHeaders = (headers) => {\n  var _a13;\n  const res = {};\n  if (!(headers instanceof Headers)) {\n    headers = new Headers(headers != null ? headers : void 0);\n  }\n  const cookies = [];\n  for (const [k, v] of headers) {\n    if (k === \"set-cookie\") {\n      cookies.push(v);\n    } else {\n      res[k] = v;\n    }\n  }\n  if (cookies.length > 0) {\n    res[\"set-cookie\"] = cookies;\n  }\n  (_a13 = res[\"content-type\"]) != null ? _a13 : res[\"content-type\"] = \"text/plain; charset=UTF-8\";\n  return res;\n};\nvar responseCache = Symbol(\"responseCache\");\nvar getResponseCache = Symbol(\"getResponseCache\");\nvar cacheKey = Symbol(\"cache\");\nvar GlobalResponse = global.Response;\nvar _body, _init, _a2;\nvar Response2 = (_a2 = class {\n  constructor(body, init) {\n    __privateAdd(this, _body);\n    __privateAdd(this, _init);\n    __privateSet(this, _body, body);\n    if (init instanceof _a2) {\n      const cachedGlobalResponse = init[responseCache];\n      if (cachedGlobalResponse) {\n        __privateSet(this, _init, cachedGlobalResponse);\n        this[getResponseCache]();\n        return;\n      } else {\n        __privateSet(this, _init, __privateGet(init, _init));\n      }\n    } else {\n      __privateSet(this, _init, init);\n    }\n    if (typeof body === \"string\" || typeof (body == null ? void 0 : body.getReader) !== \"undefined\") {\n      let headers = (init == null ? void 0 : init.headers) || { \"content-type\": \"text/plain; charset=UTF-8\" };\n      if (headers instanceof Headers) {\n        headers = buildOutgoingHttpHeaders(headers);\n      }\n      ;\n      this[cacheKey] = [(init == null ? void 0 : init.status) || 200, body, headers];\n    }\n  }\n  [getResponseCache]() {\n    delete this[cacheKey];\n    return this[responseCache] || (this[responseCache] = new GlobalResponse(__privateGet(this, _body), __privateGet(this, _init)));\n  }\n}, _body = new WeakMap(), _init = new WeakMap(), _a2);\n[\n  \"body\",\n  \"bodyUsed\",\n  \"headers\",\n  \"ok\",\n  \"redirected\",\n  \"status\",\n  \"statusText\",\n  \"trailers\",\n  \"type\",\n  \"url\"\n].forEach((k) => {\n  Object.defineProperty(Response2.prototype, k, {\n    get() {\n      return this[getResponseCache]()[k];\n    }\n  });\n});\n[\"arrayBuffer\", \"blob\", \"clone\", \"formData\", \"json\", \"text\"].forEach((k) => {\n  Object.defineProperty(Response2.prototype, k, {\n    value: function() {\n      return this[getResponseCache]()[k]();\n    }\n  });\n});\nObject.setPrototypeOf(Response2, GlobalResponse);\nObject.setPrototypeOf(Response2.prototype, GlobalResponse.prototype);\nvar stateKey = Reflect.ownKeys(new GlobalResponse()).find(\n  (k) => typeof k === \"symbol\" && k.toString() === \"Symbol(state)\"\n);\nif (!stateKey) {\n  console.warn(\"Failed to find Response internal state key\");\n}\nfunction getInternalBody(response) {\n  if (!stateKey) {\n    return;\n  }\n  if (response instanceof Response2) {\n    response = response[getResponseCache]();\n  }\n  const state = response[stateKey];\n  return state && state.body || void 0;\n}\nvar X_ALREADY_SENT = \"x-hono-already-sent\";\nvar webFetch = global.fetch;\nif (typeof global.crypto === \"undefined\") {\n  global.crypto = import_crypto.default;\n}\nglobal.fetch = (info, init) => {\n  init = __spreadValues({\n    // Disable compression handling so people can return the result of a fetch\n    // directly in the loader without messing with the Content-Encoding header.\n    compress: false\n  }, init);\n  return webFetch(info, init);\n};\nvar regBuffer = /^no$/i;\nvar regContentType = /^(application\\/json\\b|text\\/(?!event-stream\\b))/i;\nvar handleRequestError = () => new Response(null, {\n  status: 400\n});\nvar handleFetchError = (e) => new Response(null, {\n  status: e instanceof Error && (e.name === \"TimeoutError\" || e.constructor.name === \"TimeoutError\") ? 504 : 500\n});\nvar handleResponseError = (e, outgoing) => {\n  const err = e instanceof Error ? e : new Error(\"unknown error\", { cause: e });\n  if (err.code === \"ERR_STREAM_PREMATURE_CLOSE\") {\n    console.info(\"The user aborted a request.\");\n  } else {\n    console.error(e);\n    if (!outgoing.headersSent) {\n      outgoing.writeHead(500, { \"Content-Type\": \"text/plain\" });\n    }\n    outgoing.end(`Error: ${err.message}`);\n    outgoing.destroy(err);\n  }\n};\nvar responseViaCache = (res, outgoing) => {\n  var _a13;\n  const [status, body, header] = res[cacheKey];\n  if (typeof body === \"string\") {\n    header[\"Content-Length\"] = Buffer.byteLength(body);\n    outgoing.writeHead(status, header);\n    outgoing.end(body);\n  } else {\n    outgoing.writeHead(status, header);\n    return (_a13 = writeFromReadableStream(body, outgoing)) == null ? void 0 : _a13.catch(\n      (e) => handleResponseError(e, outgoing)\n    );\n  }\n};\nvar responseViaResponseObject = (_0, _1, ..._2) => __async(void 0, [_0, _1, ..._2], function* (res, outgoing, options = {}) {\n  if (res instanceof Promise) {\n    if (options.errorHandler) {\n      try {\n        res = yield res;\n      } catch (err) {\n        const errRes = yield options.errorHandler(err);\n        if (!errRes) {\n          return;\n        }\n        res = errRes;\n      }\n    } else {\n      res = yield res.catch(handleFetchError);\n    }\n  }\n  if (cacheKey in res) {\n    return responseViaCache(res, outgoing);\n  }\n  const resHeaderRecord = buildOutgoingHttpHeaders(res.headers);\n  const internalBody = getInternalBody(res);\n  if (internalBody) {\n    const { length, source, stream: stream2 } = internalBody;\n    if (source instanceof Uint8Array && source.byteLength !== length) {\n    } else {\n      if (length) {\n        resHeaderRecord[\"content-length\"] = length;\n      }\n      outgoing.writeHead(res.status, resHeaderRecord);\n      if (typeof source === \"string\" || source instanceof Uint8Array) {\n        outgoing.end(source);\n      } else if (source instanceof Blob) {\n        outgoing.end(new Uint8Array(yield source.arrayBuffer()));\n      } else {\n        yield writeFromReadableStream(stream2, outgoing);\n      }\n      return;\n    }\n  }\n  if (res.body) {\n    const {\n      \"transfer-encoding\": transferEncoding,\n      \"content-encoding\": contentEncoding,\n      \"content-length\": contentLength,\n      \"x-accel-buffering\": accelBuffering,\n      \"content-type\": contentType\n    } = resHeaderRecord;\n    if (transferEncoding || contentEncoding || contentLength || // nginx buffering variant\n    accelBuffering && regBuffer.test(accelBuffering) || !regContentType.test(contentType)) {\n      outgoing.writeHead(res.status, resHeaderRecord);\n      yield writeFromReadableStream(res.body, outgoing);\n    } else {\n      const buffer = yield res.arrayBuffer();\n      resHeaderRecord[\"content-length\"] = buffer.byteLength;\n      outgoing.writeHead(res.status, resHeaderRecord);\n      outgoing.end(new Uint8Array(buffer));\n    }\n  } else if (resHeaderRecord[X_ALREADY_SENT]) {\n  } else {\n    outgoing.writeHead(res.status, resHeaderRecord);\n    outgoing.end();\n  }\n});\nvar getRequestListener = (fetchCallback, options = {}) => {\n  if (options.overrideGlobalObjects !== false && global.Request !== Request2) {\n    Object.defineProperty(global, \"Request\", {\n      value: Request2\n    });\n    Object.defineProperty(global, \"Response\", {\n      value: Response2\n    });\n  }\n  return (incoming, outgoing) => __async(void 0, null, function* () {\n    let res, req;\n    try {\n      req = newRequest(incoming, options.hostname);\n      outgoing.on(\"close\", () => {\n        const abortController = req[abortControllerKey];\n        if (!abortController) {\n          return;\n        }\n        if (incoming.errored) {\n          req[abortControllerKey].abort(incoming.errored.toString());\n        } else if (!outgoing.writableFinished) {\n          req[abortControllerKey].abort(\"Client connection prematurely closed.\");\n        }\n      });\n      res = fetchCallback(req, { incoming, outgoing });\n      if (cacheKey in res) {\n        return responseViaCache(res, outgoing);\n      }\n    } catch (e) {\n      if (!res) {\n        if (options.errorHandler) {\n          res = yield options.errorHandler(req ? e : toRequestError(e));\n          if (!res) {\n            return;\n          }\n        } else if (!req) {\n          res = handleRequestError();\n        } else {\n          res = handleFetchError(e);\n        }\n      } else {\n        return handleResponseError(e, outgoing);\n      }\n    }\n    try {\n      return responseViaResponseObject(res, outgoing, options);\n    } catch (e) {\n      return handleResponseError(e, outgoing);\n    }\n  });\n};\nvar createAdaptorServer = (options) => {\n  const fetchCallback = options.fetch;\n  const requestListener = getRequestListener(fetchCallback, {\n    hostname: options.hostname,\n    overrideGlobalObjects: options.overrideGlobalObjects\n  });\n  const createServer = options.createServer || import_http.createServer;\n  const server2 = createServer(options.serverOptions || {}, requestListener);\n  return server2;\n};\nvar serve = (options, listeningListener) => {\n  var _a13;\n  const server2 = createAdaptorServer(options);\n  server2.listen((_a13 = options == null ? void 0 : options.port) != null ? _a13 : 3e3, options.hostname, () => {\n    const serverInfo = server2.address();\n    listeningListener && listeningListener(serverInfo);\n  });\n  return server2;\n};\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/compose.js\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    function dispatch(i) {\n      return __async(this, null, function* () {\n        if (i <= index) {\n          throw new Error(\"next() called multiple times\");\n        }\n        index = i;\n        let res;\n        let isError = false;\n        let handler;\n        if (middleware[i]) {\n          handler = middleware[i][0][0];\n          context.req.routeIndex = i;\n        } else {\n          handler = i === middleware.length && next || void 0;\n        }\n        if (handler) {\n          try {\n            res = yield handler(context, () => dispatch(i + 1));\n          } catch (err) {\n            if (err instanceof Error && onError) {\n              context.error = err;\n              res = yield onError(err, context);\n              isError = true;\n            } else {\n              throw err;\n            }\n          }\n        } else {\n          if (context.finalized === false && onNotFound) {\n            res = yield onNotFound(context);\n          }\n        }\n        if (res && (context.finalized === false || isError)) {\n          context.res = res;\n        }\n        return context;\n      });\n    }\n  };\n};\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/utils/body.js\nvar parseBody = (_0, ..._1) => __async(void 0, [_0, ..._1], function* (request, options = /* @__PURE__ */ Object.create(null)) {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if ((contentType == null ? void 0 : contentType.startsWith(\"multipart/form-data\")) || (contentType == null ? void 0 : contentType.startsWith(\"application/x-www-form-urlencoded\"))) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n});\nfunction parseFormData(request, options) {\n  return __async(this, null, function* () {\n    const formData = yield request.formData();\n    if (formData) {\n      return convertFormDataToBodyData(formData, options);\n    }\n    return {};\n  });\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    form[key] = value;\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/utils/url.js\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey2 = `${label}#${next}`;\n    if (!patternCache[cacheKey2]) {\n      if (match[2]) {\n        patternCache[cacheKey2] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey2, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey2] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey2];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch (e) {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch (e2) {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", 8);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${(base == null ? void 0 : base[0]) === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${(base == null ? void 0 : base.at(-1)) === \"/\" ? \"\" : \"/\"}${(sub == null ? void 0 : sub[0]) === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? decodeURIComponent_(value) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  var _a13;\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded != null ? encoded : encoded = /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      (_a13 = results[name]) != null ? _a13 : results[name] = value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/request.js\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar _validatedData, _matchResult, _HonoRequest_instances, getDecodedParam_fn, getAllDecodedParams_fn, getParamValue_fn, _cachedBody, _a3;\nvar HonoRequest = (_a3 = class {\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    __privateAdd(this, _HonoRequest_instances);\n    __publicField(this, \"raw\");\n    __privateAdd(this, _validatedData);\n    __privateAdd(this, _matchResult);\n    __publicField(this, \"routeIndex\", 0);\n    __publicField(this, \"path\");\n    __publicField(this, \"bodyCache\", {});\n    __privateAdd(this, _cachedBody, (key) => {\n      const { bodyCache, raw: raw2 } = this;\n      const cachedBody = bodyCache[key];\n      if (cachedBody) {\n        return cachedBody;\n      }\n      const anyCachedKey = Object.keys(bodyCache)[0];\n      if (anyCachedKey) {\n        return bodyCache[anyCachedKey].then((body) => {\n          if (anyCachedKey === \"json\") {\n            body = JSON.stringify(body);\n          }\n          return new Response(body)[key]();\n        });\n      }\n      return bodyCache[key] = raw2[key]();\n    });\n    this.raw = request;\n    this.path = path;\n    __privateSet(this, _matchResult, matchResult);\n    __privateSet(this, _validatedData, {});\n  }\n  param(key) {\n    return key ? __privateMethod(this, _HonoRequest_instances, getDecodedParam_fn).call(this, key) : __privateMethod(this, _HonoRequest_instances, getAllDecodedParams_fn).call(this);\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    var _a13;\n    if (name) {\n      return (_a13 = this.raw.headers.get(name)) != null ? _a13 : void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  parseBody(options) {\n    return __async(this, null, function* () {\n      var _a13, _b2;\n      return (_b2 = (_a13 = this.bodyCache).parsedBody) != null ? _b2 : _a13.parsedBody = yield parseBody(this, options);\n    });\n  }\n  json() {\n    return __privateGet(this, _cachedBody).call(this, \"json\");\n  }\n  text() {\n    return __privateGet(this, _cachedBody).call(this, \"text\");\n  }\n  arrayBuffer() {\n    return __privateGet(this, _cachedBody).call(this, \"arrayBuffer\");\n  }\n  blob() {\n    return __privateGet(this, _cachedBody).call(this, \"blob\");\n  }\n  formData() {\n    return __privateGet(this, _cachedBody).call(this, \"formData\");\n  }\n  addValidatedData(target, data) {\n    __privateGet(this, _validatedData)[target] = data;\n  }\n  valid(target) {\n    return __privateGet(this, _validatedData)[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get matchedRoutes() {\n    return __privateGet(this, _matchResult)[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return __privateGet(this, _matchResult)[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n}, _validatedData = new WeakMap(), _matchResult = new WeakMap(), _HonoRequest_instances = new WeakSet(), getDecodedParam_fn = function(key) {\n  const paramKey = __privateGet(this, _matchResult)[0][this.routeIndex][1][key];\n  const param = __privateMethod(this, _HonoRequest_instances, getParamValue_fn).call(this, paramKey);\n  return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n}, getAllDecodedParams_fn = function() {\n  const decoded = {};\n  const keys = Object.keys(__privateGet(this, _matchResult)[0][this.routeIndex][1]);\n  for (const key of keys) {\n    const value = __privateMethod(this, _HonoRequest_instances, getParamValue_fn).call(this, __privateGet(this, _matchResult)[0][this.routeIndex][1][key]);\n    if (value && typeof value === \"string\") {\n      decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n    }\n  }\n  return decoded;\n}, getParamValue_fn = function(paramKey) {\n  return __privateGet(this, _matchResult)[1] ? __privateGet(this, _matchResult)[1][paramKey] : paramKey;\n}, _cachedBody = new WeakMap(), _a3);\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/utils/html.js\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar resolveCallback = (str, phase, preserveCallbacks, context, buffer) => __async(void 0, null, function* () {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = yield str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!(callbacks == null ? void 0 : callbacks.length)) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(yield resStr, callbacks);\n  } else {\n    return resStr;\n  }\n});\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/context.js\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setHeaders = (headers, map = {}) => {\n  for (const key of Object.keys(map)) {\n    headers.set(key, map[key]);\n  }\n  return headers;\n};\nvar _rawRequest, _req, _var, _status, _executionCtx, _headers, _preparedHeaders, _res, _isFresh, _layout, _renderer, _notFoundHandler, _matchResult2, _path, _Context_instances, newResponse_fn, _a4;\nvar Context = (_a4 = class {\n  constructor(req, options) {\n    __privateAdd(this, _Context_instances);\n    __privateAdd(this, _rawRequest);\n    __privateAdd(this, _req);\n    __publicField(this, \"env\", {});\n    __privateAdd(this, _var);\n    __publicField(this, \"finalized\", false);\n    __publicField(this, \"error\");\n    __privateAdd(this, _status, 200);\n    __privateAdd(this, _executionCtx);\n    __privateAdd(this, _headers);\n    __privateAdd(this, _preparedHeaders);\n    __privateAdd(this, _res);\n    __privateAdd(this, _isFresh, true);\n    __privateAdd(this, _layout);\n    __privateAdd(this, _renderer);\n    __privateAdd(this, _notFoundHandler);\n    __privateAdd(this, _matchResult2);\n    __privateAdd(this, _path);\n    __publicField(this, \"render\", (...args) => {\n      var _a13;\n      (_a13 = __privateGet(this, _renderer)) != null ? _a13 : __privateSet(this, _renderer, (content) => this.html(content));\n      return __privateGet(this, _renderer).call(this, ...args);\n    });\n    __publicField(this, \"setLayout\", (layout) => __privateSet(this, _layout, layout));\n    __publicField(this, \"getLayout\", () => __privateGet(this, _layout));\n    __publicField(this, \"setRenderer\", (renderer) => {\n      __privateSet(this, _renderer, renderer);\n    });\n    __publicField(this, \"header\", (name, value, options) => {\n      var _a13;\n      if (value === void 0) {\n        if (__privateGet(this, _headers)) {\n          __privateGet(this, _headers).delete(name);\n        } else if (__privateGet(this, _preparedHeaders)) {\n          delete __privateGet(this, _preparedHeaders)[name.toLocaleLowerCase()];\n        }\n        if (this.finalized) {\n          this.res.headers.delete(name);\n        }\n        return;\n      }\n      if (options == null ? void 0 : options.append) {\n        if (!__privateGet(this, _headers)) {\n          __privateSet(this, _isFresh, false);\n          __privateSet(this, _headers, new Headers(__privateGet(this, _preparedHeaders)));\n          __privateSet(this, _preparedHeaders, {});\n        }\n        __privateGet(this, _headers).append(name, value);\n      } else {\n        if (__privateGet(this, _headers)) {\n          __privateGet(this, _headers).set(name, value);\n        } else {\n          (_a13 = __privateGet(this, _preparedHeaders)) != null ? _a13 : __privateSet(this, _preparedHeaders, {});\n          __privateGet(this, _preparedHeaders)[name.toLowerCase()] = value;\n        }\n      }\n      if (this.finalized) {\n        if (options == null ? void 0 : options.append) {\n          this.res.headers.append(name, value);\n        } else {\n          this.res.headers.set(name, value);\n        }\n      }\n    });\n    __publicField(this, \"status\", (status) => {\n      __privateSet(this, _isFresh, false);\n      __privateSet(this, _status, status);\n    });\n    __publicField(this, \"set\", (key, value) => {\n      var _a13;\n      (_a13 = __privateGet(this, _var)) != null ? _a13 : __privateSet(this, _var, /* @__PURE__ */ new Map());\n      __privateGet(this, _var).set(key, value);\n    });\n    __publicField(this, \"get\", (key) => {\n      return __privateGet(this, _var) ? __privateGet(this, _var).get(key) : void 0;\n    });\n    __publicField(this, \"newResponse\", (...args) => __privateMethod(this, _Context_instances, newResponse_fn).call(this, ...args));\n    __publicField(this, \"body\", (data, arg, headers) => {\n      return typeof arg === \"number\" ? __privateMethod(this, _Context_instances, newResponse_fn).call(this, data, arg, headers) : __privateMethod(this, _Context_instances, newResponse_fn).call(this, data, arg);\n    });\n    __publicField(this, \"text\", (text, arg, headers) => {\n      if (!__privateGet(this, _preparedHeaders)) {\n        if (__privateGet(this, _isFresh) && !headers && !arg) {\n          return new Response(text);\n        }\n        __privateSet(this, _preparedHeaders, {});\n      }\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = TEXT_PLAIN;\n      if (typeof arg === \"number\") {\n        return __privateMethod(this, _Context_instances, newResponse_fn).call(this, text, arg, headers);\n      }\n      return __privateMethod(this, _Context_instances, newResponse_fn).call(this, text, arg);\n    });\n    __publicField(this, \"json\", (object, arg, headers) => {\n      var _a13;\n      const body = JSON.stringify(object);\n      (_a13 = __privateGet(this, _preparedHeaders)) != null ? _a13 : __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = \"application/json\";\n      return typeof arg === \"number\" ? __privateMethod(this, _Context_instances, newResponse_fn).call(this, body, arg, headers) : __privateMethod(this, _Context_instances, newResponse_fn).call(this, body, arg);\n    });\n    __publicField(this, \"html\", (html, arg, headers) => {\n      var _a13;\n      (_a13 = __privateGet(this, _preparedHeaders)) != null ? _a13 : __privateSet(this, _preparedHeaders, {});\n      __privateGet(this, _preparedHeaders)[\"content-type\"] = \"text/html; charset=UTF-8\";\n      if (typeof html === \"object\") {\n        return resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then((html2) => {\n          return typeof arg === \"number\" ? __privateMethod(this, _Context_instances, newResponse_fn).call(this, html2, arg, headers) : __privateMethod(this, _Context_instances, newResponse_fn).call(this, html2, arg);\n        });\n      }\n      return typeof arg === \"number\" ? __privateMethod(this, _Context_instances, newResponse_fn).call(this, html, arg, headers) : __privateMethod(this, _Context_instances, newResponse_fn).call(this, html, arg);\n    });\n    __publicField(this, \"redirect\", (location, status) => {\n      var _a13;\n      (_a13 = __privateGet(this, _headers)) != null ? _a13 : __privateSet(this, _headers, new Headers());\n      __privateGet(this, _headers).set(\"Location\", String(location));\n      return this.newResponse(null, status != null ? status : 302);\n    });\n    __publicField(this, \"notFound\", () => {\n      var _a13;\n      (_a13 = __privateGet(this, _notFoundHandler)) != null ? _a13 : __privateSet(this, _notFoundHandler, () => new Response());\n      return __privateGet(this, _notFoundHandler).call(this, this);\n    });\n    __privateSet(this, _rawRequest, req);\n    if (options) {\n      __privateSet(this, _executionCtx, options.executionCtx);\n      this.env = options.env;\n      __privateSet(this, _notFoundHandler, options.notFoundHandler);\n      __privateSet(this, _path, options.path);\n      __privateSet(this, _matchResult2, options.matchResult);\n    }\n  }\n  get req() {\n    var _a13;\n    (_a13 = __privateGet(this, _req)) != null ? _a13 : __privateSet(this, _req, new HonoRequest(__privateGet(this, _rawRequest), __privateGet(this, _path), __privateGet(this, _matchResult2)));\n    return __privateGet(this, _req);\n  }\n  get event() {\n    if (__privateGet(this, _executionCtx) && \"respondWith\" in __privateGet(this, _executionCtx)) {\n      return __privateGet(this, _executionCtx);\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (__privateGet(this, _executionCtx)) {\n      return __privateGet(this, _executionCtx);\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    __privateSet(this, _isFresh, false);\n    return __privateGet(this, _res) || __privateSet(this, _res, new Response(\"404 Not Found\", { status: 404 }));\n  }\n  set res(_res2) {\n    __privateSet(this, _isFresh, false);\n    if (__privateGet(this, _res) && _res2) {\n      try {\n        for (const [k, v] of __privateGet(this, _res).headers.entries()) {\n          if (k === \"content-type\") {\n            continue;\n          }\n          if (k === \"set-cookie\") {\n            const cookies = __privateGet(this, _res).headers.getSetCookie();\n            _res2.headers.delete(\"set-cookie\");\n            for (const cookie of cookies) {\n              _res2.headers.append(\"set-cookie\", cookie);\n            }\n          } else {\n            _res2.headers.set(k, v);\n          }\n        }\n      } catch (e) {\n        if (e instanceof TypeError && e.message.includes(\"immutable\")) {\n          this.res = new Response(_res2.body, {\n            headers: _res2.headers,\n            status: _res2.status\n          });\n          return;\n        } else {\n          throw e;\n        }\n      }\n    }\n    __privateSet(this, _res, _res2);\n    this.finalized = true;\n  }\n  get var() {\n    if (!__privateGet(this, _var)) {\n      return {};\n    }\n    return Object.fromEntries(__privateGet(this, _var));\n  }\n}, _rawRequest = new WeakMap(), _req = new WeakMap(), _var = new WeakMap(), _status = new WeakMap(), _executionCtx = new WeakMap(), _headers = new WeakMap(), _preparedHeaders = new WeakMap(), _res = new WeakMap(), _isFresh = new WeakMap(), _layout = new WeakMap(), _renderer = new WeakMap(), _notFoundHandler = new WeakMap(), _matchResult2 = new WeakMap(), _path = new WeakMap(), _Context_instances = new WeakSet(), newResponse_fn = function(data, arg, headers) {\n  var _a13, _b2, _c;\n  if (__privateGet(this, _isFresh) && !headers && !arg && __privateGet(this, _status) === 200) {\n    return new Response(data, {\n      headers: __privateGet(this, _preparedHeaders)\n    });\n  }\n  if (arg && typeof arg !== \"number\") {\n    const header = new Headers(arg.headers);\n    if (__privateGet(this, _headers)) {\n      __privateGet(this, _headers).forEach((v, k) => {\n        if (k === \"set-cookie\") {\n          header.append(k, v);\n        } else {\n          header.set(k, v);\n        }\n      });\n    }\n    const headers2 = setHeaders(header, __privateGet(this, _preparedHeaders));\n    return new Response(data, {\n      headers: headers2,\n      status: (_a13 = arg.status) != null ? _a13 : __privateGet(this, _status)\n    });\n  }\n  const status = typeof arg === \"number\" ? arg : __privateGet(this, _status);\n  (_b2 = __privateGet(this, _preparedHeaders)) != null ? _b2 : __privateSet(this, _preparedHeaders, {});\n  (_c = __privateGet(this, _headers)) != null ? _c : __privateSet(this, _headers, new Headers());\n  setHeaders(__privateGet(this, _headers), __privateGet(this, _preparedHeaders));\n  if (__privateGet(this, _res)) {\n    __privateGet(this, _res).headers.forEach((v, k) => {\n      var _a14, _b3;\n      if (k === \"set-cookie\") {\n        (_a14 = __privateGet(this, _headers)) == null ? void 0 : _a14.append(k, v);\n      } else {\n        (_b3 = __privateGet(this, _headers)) == null ? void 0 : _b3.set(k, v);\n      }\n    });\n    setHeaders(__privateGet(this, _headers), __privateGet(this, _preparedHeaders));\n  }\n  headers != null ? headers : headers = {};\n  for (const [k, v] of Object.entries(headers)) {\n    if (typeof v === \"string\") {\n      __privateGet(this, _headers).set(k, v);\n    } else {\n      __privateGet(this, _headers).delete(k);\n      for (const v2 of v) {\n        __privateGet(this, _headers).append(k, v2);\n      }\n    }\n  }\n  return new Response(data, {\n    status,\n    headers: __privateGet(this, _headers)\n  });\n}, _a4);\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/router.js\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/utils/constants.js\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/hono-base.js\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    return err.getResponse();\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar _path2, _Hono_instances, clone_fn, _notFoundHandler2, addRoute_fn, handleError_fn, dispatch_fn, _a5;\nvar Hono = (_a5 = class {\n  constructor(options = {}) {\n    __privateAdd(this, _Hono_instances);\n    __publicField(this, \"get\");\n    __publicField(this, \"post\");\n    __publicField(this, \"put\");\n    __publicField(this, \"delete\");\n    __publicField(this, \"options\");\n    __publicField(this, \"patch\");\n    __publicField(this, \"all\");\n    __publicField(this, \"on\");\n    __publicField(this, \"use\");\n    __publicField(this, \"router\");\n    __publicField(this, \"getPath\");\n    __publicField(this, \"_basePath\", \"/\");\n    __privateAdd(this, _path2, \"/\");\n    __publicField(this, \"routes\", []);\n    __privateAdd(this, _notFoundHandler2, notFoundHandler);\n    __publicField(this, \"errorHandler\", errorHandler);\n    __publicField(this, \"onError\", (handler) => {\n      this.errorHandler = handler;\n      return this;\n    });\n    __publicField(this, \"notFound\", (handler) => {\n      __privateSet(this, _notFoundHandler2, handler);\n      return this;\n    });\n    __publicField(this, \"fetch\", (request, ...rest) => {\n      return __privateMethod(this, _Hono_instances, dispatch_fn).call(this, request, rest[1], rest[0], request.method);\n    });\n    __publicField(this, \"request\", (input, requestInit, Env, executionCtx) => {\n      if (input instanceof Request) {\n        return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n      }\n      input = input.toString();\n      return this.fetch(\n        new Request(\n          /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n          requestInit\n        ),\n        Env,\n        executionCtx\n      );\n    });\n    __publicField(this, \"fire\", () => {\n      addEventListener(\"fetch\", (event) => {\n        event.respondWith(__privateMethod(this, _Hono_instances, dispatch_fn).call(this, event.request, event, void 0, event.request.method));\n      });\n    });\n    var _b2;\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          __privateSet(this, _path2, args1);\n        } else {\n          __privateMethod(this, _Hono_instances, addRoute_fn).call(this, method, __privateGet(this, _path2), args1);\n        }\n        args.forEach((handler) => {\n          __privateMethod(this, _Hono_instances, addRoute_fn).call(this, method, __privateGet(this, _path2), handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        __privateSet(this, _path2, p);\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            __privateMethod(this, _Hono_instances, addRoute_fn).call(this, m.toUpperCase(), __privateGet(this, _path2), handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        __privateSet(this, _path2, arg1);\n      } else {\n        __privateSet(this, _path2, \"*\");\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        __privateMethod(this, _Hono_instances, addRoute_fn).call(this, METHOD_NAME_ALL, __privateGet(this, _path2), handler);\n      });\n      return this;\n    };\n    const _a13 = options, { strict } = _a13, optionsWithoutStrict = __objRest(_a13, [\"strict\"]);\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = (strict != null ? strict : true) ? (_b2 = options.getPath) != null ? _b2 : getPath : getPathNoStrict;\n  }\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      var _a13;\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = (c, next) => __async(this, null, function* () {\n          return (yield compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        });\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      __privateMethod(_a13 = subApp, _Hono_instances, addRoute_fn).call(_a13, r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = __privateMethod(this, _Hono_instances, clone_fn).call(this);\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        replaceRequest = options.replaceRequest;\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch (e) {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest || (replaceRequest = (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })());\n    const handler = (c, next) => __async(this, null, function* () {\n      const res = yield applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      yield next();\n    });\n    __privateMethod(this, _Hono_instances, addRoute_fn).call(this, METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n}, _path2 = new WeakMap(), _Hono_instances = new WeakSet(), clone_fn = function() {\n  const clone = new Hono({\n    router: this.router,\n    getPath: this.getPath\n  });\n  clone.routes = this.routes;\n  return clone;\n}, _notFoundHandler2 = new WeakMap(), addRoute_fn = function(method, path, handler) {\n  method = method.toUpperCase();\n  path = mergePath(this._basePath, path);\n  const r = { path, method, handler };\n  this.router.add(method, path, [handler, r]);\n  this.routes.push(r);\n}, handleError_fn = function(err, c) {\n  if (err instanceof Error) {\n    return this.errorHandler(err, c);\n  }\n  throw err;\n}, dispatch_fn = function(request, executionCtx, env, method) {\n  if (method === \"HEAD\") {\n    return (() => __async(this, null, function* () {\n      return new Response(null, yield __privateMethod(this, _Hono_instances, dispatch_fn).call(this, request, executionCtx, env, \"GET\"));\n    }))();\n  }\n  const path = this.getPath(request, { env });\n  const matchResult = this.router.match(method, path);\n  const c = new Context(request, {\n    path,\n    matchResult,\n    env,\n    executionCtx,\n    notFoundHandler: __privateGet(this, _notFoundHandler2)\n  });\n  if (matchResult[0].length === 1) {\n    let res;\n    try {\n      res = matchResult[0][0][0][0](c, () => __async(this, null, function* () {\n        c.res = yield __privateGet(this, _notFoundHandler2).call(this, c);\n      }));\n    } catch (err) {\n      return __privateMethod(this, _Hono_instances, handleError_fn).call(this, err, c);\n    }\n    return res instanceof Promise ? res.then(\n      (resolved) => resolved || (c.finalized ? c.res : __privateGet(this, _notFoundHandler2).call(this, c))\n    ).catch((err) => __privateMethod(this, _Hono_instances, handleError_fn).call(this, err, c)) : res != null ? res : __privateGet(this, _notFoundHandler2).call(this, c);\n  }\n  const composed = compose(matchResult[0], this.errorHandler, __privateGet(this, _notFoundHandler2));\n  return (() => __async(this, null, function* () {\n    try {\n      const context = yield composed(c);\n      if (!context.finalized) {\n        throw new Error(\n          \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n        );\n      }\n      return context.res;\n    } catch (err) {\n      return __privateMethod(this, _Hono_instances, handleError_fn).call(this, err, c);\n    }\n  }))();\n}, _a5);\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/router/reg-exp-router/node.js\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar _index, _varIndex, _children, _a6;\nvar Node = (_a6 = class {\n  constructor() {\n    __privateAdd(this, _index);\n    __privateAdd(this, _varIndex);\n    __privateAdd(this, _children, /* @__PURE__ */ Object.create(null));\n  }\n  insert(tokens2, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens2.length === 0) {\n      if (__privateGet(this, _index) !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      __privateSet(this, _index, index);\n      return;\n    }\n    const [token, ...restTokens] = tokens2;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = __privateGet(this, _children)[regexpStr];\n      if (!node) {\n        if (Object.keys(__privateGet(this, _children)).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = __privateGet(this, _children)[regexpStr] = new Node();\n        if (name !== \"\") {\n          __privateSet(node, _varIndex, context.varIndex++);\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, __privateGet(node, _varIndex)]);\n      }\n    } else {\n      node = __privateGet(this, _children)[token];\n      if (!node) {\n        if (Object.keys(__privateGet(this, _children)).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = __privateGet(this, _children)[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(__privateGet(this, _children)).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = __privateGet(this, _children)[k];\n      return (typeof __privateGet(c, _varIndex) === \"number\" ? `(${k})@${__privateGet(c, _varIndex)}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof __privateGet(this, _index) === \"number\") {\n      strList.unshift(`#${__privateGet(this, _index)}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n}, _index = new WeakMap(), _varIndex = new WeakMap(), _children = new WeakMap(), _a6);\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/router/reg-exp-router/trie.js\nvar _context, _root, _a7;\nvar Trie = (_a7 = class {\n  constructor() {\n    __privateAdd(this, _context, { varIndex: 0 });\n    __privateAdd(this, _root, new Node());\n  }\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens2 = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens2.length - 1; j >= 0; j--) {\n        if (tokens2[j].indexOf(mark) !== -1) {\n          tokens2[j] = tokens2[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    __privateGet(this, _root).insert(tokens2, index, paramAssoc, __privateGet(this, _context), pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = __privateGet(this, _root).buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n}, _context = new WeakMap(), _root = new WeakMap(), _a7);\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/router/reg-exp-router/router.js\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  var _a13;\n  return (_a13 = wildcardRegExpCache[path]) != null ? _a13 : wildcardRegExpCache[path] = new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  var _a13;\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = (_a13 = handlerData[i][j]) == null ? void 0 : _a13[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar _middleware, _routes, _RegExpRouter_instances, buildAllMatchers_fn, buildMatcher_fn, _a8;\nvar RegExpRouter = (_a8 = class {\n  constructor() {\n    __privateAdd(this, _RegExpRouter_instances);\n    __publicField(this, \"name\", \"RegExpRouter\");\n    __privateAdd(this, _middleware);\n    __privateAdd(this, _routes);\n    __privateSet(this, _middleware, { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) });\n    __privateSet(this, _routes, { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) });\n  }\n  add(method, path, handler) {\n    var _a13;\n    const middleware = __privateGet(this, _middleware);\n    const routes = __privateGet(this, _routes);\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          var _a14;\n          (_a14 = middleware[m])[path] || (_a14[path] = findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n        });\n      } else {\n        (_a13 = middleware[method])[path] || (_a13[path] = findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || []);\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        var _a14;\n        if (method === METHOD_NAME_ALL || method === m) {\n          (_a14 = routes[m])[path2] || (_a14[path2] = [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ]);\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = __privateMethod(this, _RegExpRouter_instances, buildAllMatchers_fn).call(this);\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n}, _middleware = new WeakMap(), _routes = new WeakMap(), _RegExpRouter_instances = new WeakSet(), buildAllMatchers_fn = function() {\n  const matchers = /* @__PURE__ */ Object.create(null);\n  Object.keys(__privateGet(this, _routes)).concat(Object.keys(__privateGet(this, _middleware))).forEach((method) => {\n    matchers[method] || (matchers[method] = __privateMethod(this, _RegExpRouter_instances, buildMatcher_fn).call(this, method));\n  });\n  __privateSet(this, _middleware, __privateSet(this, _routes, void 0));\n  return matchers;\n}, buildMatcher_fn = function(method) {\n  const routes = [];\n  let hasOwnRoute = method === METHOD_NAME_ALL;\n  [__privateGet(this, _middleware), __privateGet(this, _routes)].forEach((r) => {\n    const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n    if (ownRoute.length !== 0) {\n      hasOwnRoute || (hasOwnRoute = true);\n      routes.push(...ownRoute);\n    } else if (method !== METHOD_NAME_ALL) {\n      routes.push(\n        ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n      );\n    }\n  });\n  if (!hasOwnRoute) {\n    return null;\n  } else {\n    return buildMatcherFromPreprocessedRoutes(routes);\n  }\n}, _a8);\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/router/smart-router/router.js\nvar _routers, _routes2, _a9;\nvar SmartRouter = (_a9 = class {\n  constructor(init) {\n    __publicField(this, \"name\", \"SmartRouter\");\n    __privateAdd(this, _routers, []);\n    __privateAdd(this, _routes2, []);\n    __privateSet(this, _routers, init.routers);\n  }\n  add(method, path, handler) {\n    if (!__privateGet(this, _routes2)) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    __privateGet(this, _routes2).push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!__privateGet(this, _routes2)) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = __privateGet(this, _routers);\n    const routes = __privateGet(this, _routes2);\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      __privateSet(this, _routers, [router]);\n      __privateSet(this, _routes2, void 0);\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (__privateGet(this, _routes2) || __privateGet(this, _routers).length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return __privateGet(this, _routers)[0];\n  }\n}, _routers = new WeakMap(), _routes2 = new WeakMap(), _a9);\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/router/trie-router/node.js\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar _methods, _children2, _patterns, _order, _params, _Node_instances, getHandlerSets_fn, _a10;\nvar Node2 = (_a10 = class {\n  constructor(method, handler, children) {\n    __privateAdd(this, _Node_instances);\n    __privateAdd(this, _methods);\n    __privateAdd(this, _children2);\n    __privateAdd(this, _patterns);\n    __privateAdd(this, _order, 0);\n    __privateAdd(this, _params, emptyParams);\n    __privateSet(this, _children2, children || /* @__PURE__ */ Object.create(null));\n    __privateSet(this, _methods, []);\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      __privateSet(this, _methods, [m]);\n    }\n    __privateSet(this, _patterns, []);\n  }\n  insert(method, path, handler) {\n    __privateSet(this, _order, ++__privateWrapper(this, _order)._);\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (Object.keys(__privateGet(curNode, _children2)).includes(key)) {\n        curNode = __privateGet(curNode, _children2)[key];\n        const pattern2 = getPattern(p, nextP);\n        if (pattern2) {\n          possibleKeys.push(pattern2[1]);\n        }\n        continue;\n      }\n      __privateGet(curNode, _children2)[key] = new Node2();\n      if (pattern) {\n        __privateGet(curNode, _patterns).push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = __privateGet(curNode, _children2)[key];\n    }\n    const m = /* @__PURE__ */ Object.create(null);\n    const handlerSet = {\n      handler,\n      possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n      score: __privateGet(this, _order)\n    };\n    m[method] = handlerSet;\n    __privateGet(curNode, _methods).push(m);\n    return curNode;\n  }\n  search(method, path) {\n    var _a13, _b2, _c;\n    const handlerSets = [];\n    __privateSet(this, _params, emptyParams);\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = __privateGet(node, _children2)[part];\n        if (nextNode) {\n          __privateSet(nextNode, _params, __privateGet(node, _params));\n          if (isLast) {\n            if (__privateGet(nextNode, _children2)[\"*\"]) {\n              handlerSets.push(\n                ...__privateMethod(this, _Node_instances, getHandlerSets_fn).call(this, __privateGet(nextNode, _children2)[\"*\"], method, __privateGet(node, _params))\n              );\n            }\n            handlerSets.push(...__privateMethod(this, _Node_instances, getHandlerSets_fn).call(this, nextNode, method, __privateGet(node, _params)));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = __privateGet(node, _patterns).length; k < len3; k++) {\n          const pattern = __privateGet(node, _patterns)[k];\n          const params = __privateGet(node, _params) === emptyParams ? {} : __spreadValues({}, __privateGet(node, _params));\n          if (pattern === \"*\") {\n            const astNode = __privateGet(node, _children2)[\"*\"];\n            if (astNode) {\n              handlerSets.push(...__privateMethod(this, _Node_instances, getHandlerSets_fn).call(this, astNode, method, __privateGet(node, _params)));\n              __privateSet(astNode, _params, params);\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (part === \"\") {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = __privateGet(node, _children2)[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...__privateMethod(this, _Node_instances, getHandlerSets_fn).call(this, child, method, __privateGet(node, _params), params));\n              if (Object.keys(__privateGet(child, _children2)).length) {\n                __privateSet(child, _params, params);\n                const componentCount = (_b2 = (_a13 = m[0].match(/\\//)) == null ? void 0 : _a13.length) != null ? _b2 : 0;\n                const targetCurNodes = curNodesQueue[componentCount] || (curNodesQueue[componentCount] = []);\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...__privateMethod(this, _Node_instances, getHandlerSets_fn).call(this, child, method, params, __privateGet(node, _params)));\n              if (__privateGet(child, _children2)[\"*\"]) {\n                handlerSets.push(\n                  ...__privateMethod(this, _Node_instances, getHandlerSets_fn).call(this, __privateGet(child, _children2)[\"*\"], method, params, __privateGet(node, _params))\n                );\n              }\n            } else {\n              __privateSet(child, _params, params);\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat((_c = curNodesQueue.shift()) != null ? _c : []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n}, _methods = new WeakMap(), _children2 = new WeakMap(), _patterns = new WeakMap(), _order = new WeakMap(), _params = new WeakMap(), _Node_instances = new WeakSet(), getHandlerSets_fn = function(node, method, nodeParams, params) {\n  var _a13;\n  const handlerSets = [];\n  for (let i = 0, len = __privateGet(node, _methods).length; i < len; i++) {\n    const m = __privateGet(node, _methods)[i];\n    const handlerSet = m[method] || m[METHOD_NAME_ALL];\n    const processedSet = {};\n    if (handlerSet !== void 0) {\n      handlerSet.params = /* @__PURE__ */ Object.create(null);\n      handlerSets.push(handlerSet);\n      if (nodeParams !== emptyParams || params && params !== emptyParams) {\n        for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n          const key = handlerSet.possibleKeys[i2];\n          const processed = processedSet[handlerSet.score];\n          handlerSet.params[key] = (params == null ? void 0 : params[key]) && !processed ? params[key] : (_a13 = nodeParams[key]) != null ? _a13 : params == null ? void 0 : params[key];\n          processedSet[handlerSet.score] = true;\n        }\n      }\n    }\n  }\n  return handlerSets;\n}, _a10);\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/router/trie-router/router.js\nvar _node, _a11;\nvar TrieRouter = (_a11 = class {\n  constructor() {\n    __publicField(this, \"name\", \"TrieRouter\");\n    __privateAdd(this, _node);\n    __privateSet(this, _node, new Node2());\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        __privateGet(this, _node).insert(method, results[i], handler);\n      }\n      return;\n    }\n    __privateGet(this, _node).insert(method, path, handler);\n  }\n  match(method, path) {\n    return __privateGet(this, _node).search(method, path);\n  }\n}, _node = new WeakMap(), _a11);\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/hono.js\nvar Hono2 = class extends Hono {\n  constructor(options = {}) {\n    var _a13;\n    super(options);\n    this.router = (_a13 = options.router) != null ? _a13 : new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/utils/stream.js\nvar StreamingApi = class {\n  constructor(writable, _readable) {\n    __publicField(this, \"writer\");\n    __publicField(this, \"encoder\");\n    __publicField(this, \"writable\");\n    __publicField(this, \"abortSubscribers\", []);\n    __publicField(this, \"responseReadable\");\n    __publicField(this, \"aborted\", false);\n    __publicField(this, \"closed\", false);\n    this.writable = writable;\n    this.writer = writable.getWriter();\n    this.encoder = new TextEncoder();\n    const reader = _readable.getReader();\n    this.abortSubscribers.push(() => __async(this, null, function* () {\n      yield reader.cancel();\n    }));\n    this.responseReadable = new ReadableStream({\n      pull(controller) {\n        return __async(this, null, function* () {\n          const { done, value } = yield reader.read();\n          done ? controller.close() : controller.enqueue(value);\n        });\n      },\n      cancel: () => {\n        this.abort();\n      }\n    });\n  }\n  write(input) {\n    return __async(this, null, function* () {\n      try {\n        if (typeof input === \"string\") {\n          input = this.encoder.encode(input);\n        }\n        yield this.writer.write(input);\n      } catch (e) {\n      }\n      return this;\n    });\n  }\n  writeln(input) {\n    return __async(this, null, function* () {\n      yield this.write(input + \"\\n\");\n      return this;\n    });\n  }\n  sleep(ms) {\n    return new Promise((res) => setTimeout(res, ms));\n  }\n  close() {\n    return __async(this, null, function* () {\n      try {\n        yield this.writer.close();\n      } catch (e) {\n      }\n      this.closed = true;\n    });\n  }\n  pipe(body) {\n    return __async(this, null, function* () {\n      this.writer.releaseLock();\n      yield body.pipeTo(this.writable, { preventClose: true });\n      this.writer = this.writable.getWriter();\n    });\n  }\n  onAbort(listener) {\n    this.abortSubscribers.push(listener);\n  }\n  abort() {\n    if (!this.aborted) {\n      this.aborted = true;\n      this.abortSubscribers.forEach((subscriber) => subscriber());\n    }\n  }\n};\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/helper/streaming/utils.js\nvar isOldBunVersion = () => {\n  const version = typeof Bun !== \"undefined\" ? Bun.version : void 0;\n  if (version === void 0) {\n    return false;\n  }\n  const result = version.startsWith(\"1.1\") || version.startsWith(\"1.0\") || version.startsWith(\"0.\");\n  isOldBunVersion = () => result;\n  return result;\n};\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/helper/streaming/stream.js\nvar contextStash = /* @__PURE__ */ new WeakMap();\nvar stream = (c, cb, onError) => {\n  const { readable, writable } = new TransformStream();\n  const stream2 = new StreamingApi(writable, readable);\n  if (isOldBunVersion()) {\n    c.req.raw.signal.addEventListener(\"abort\", () => {\n      if (!stream2.closed) {\n        stream2.abort();\n      }\n    });\n  }\n  contextStash.set(stream2.responseReadable, c);\n  (() => __async(void 0, null, function* () {\n    try {\n      yield cb(stream2);\n    } catch (e) {\n      if (e === void 0) {\n      } else if (e instanceof Error && onError) {\n        yield onError(e, stream2);\n      } else {\n        console.error(e);\n      }\n    } finally {\n      stream2.close();\n    }\n  }))();\n  return c.newResponse(stream2.responseReadable);\n};\n\n// node_modules/.pnpm/hono@4.7.5/node_modules/hono/dist/helper/streaming/text.js\nvar streamText = (c, cb, onError) => {\n  c.header(\"Content-Type\", TEXT_PLAIN);\n  c.header(\"X-Content-Type-Options\", \"nosniff\");\n  c.header(\"Transfer-Encoding\", \"chunked\");\n  return stream(c, cb, onError);\n};\n\n// src/index.ts\nvar import_node_child_process = require(\"child_process\");\nvar import_node_crypto = require(\"crypto\");\n\n// node_modules/.pnpm/otpauth@9.3.6/node_modules/otpauth/dist/otpauth.node.mjs\nvar crypto2 = __toESM(require(\"crypto\"), 1);\nvar uintDecode = (num) => {\n  const buf = new ArrayBuffer(8);\n  const arr = new Uint8Array(buf);\n  let acc = num;\n  for (let i = 7; i >= 0; i--) {\n    if (acc === 0) break;\n    arr[i] = acc & 255;\n    acc -= arr[i];\n    acc /= 256;\n  }\n  return arr;\n};\nvar globalScope = (() => {\n  if (typeof globalThis === \"object\") return globalThis;\n  else {\n    Object.defineProperty(Object.prototype, \"__GLOBALTHIS__\", {\n      get() {\n        return this;\n      },\n      configurable: true\n    });\n    try {\n      if (typeof __GLOBALTHIS__ !== \"undefined\") return __GLOBALTHIS__;\n    } finally {\n      delete Object.prototype.__GLOBALTHIS__;\n    }\n  }\n  if (typeof self !== \"undefined\") return self;\n  else if (typeof window !== \"undefined\") return window;\n  else if (typeof global !== \"undefined\") return global;\n  return void 0;\n})();\nvar canonicalizeAlgorithm = (algorithm) => {\n  switch (true) {\n    case /^(?:SHA-?1|SSL3-SHA1)$/i.test(algorithm):\n      return \"SHA1\";\n    case /^SHA(?:2?-)?224$/i.test(algorithm):\n      return \"SHA224\";\n    case /^SHA(?:2?-)?256$/i.test(algorithm):\n      return \"SHA256\";\n    case /^SHA(?:2?-)?384$/i.test(algorithm):\n      return \"SHA384\";\n    case /^SHA(?:2?-)?512$/i.test(algorithm):\n      return \"SHA512\";\n    case /^SHA3-224$/i.test(algorithm):\n      return \"SHA3-224\";\n    case /^SHA3-256$/i.test(algorithm):\n      return \"SHA3-256\";\n    case /^SHA3-384$/i.test(algorithm):\n      return \"SHA3-384\";\n    case /^SHA3-512$/i.test(algorithm):\n      return \"SHA3-512\";\n    default:\n      throw new TypeError(`Unknown hash algorithm: ${algorithm}`);\n  }\n};\nvar hmacDigest = (algorithm, key, message) => {\n  if (crypto2 == null ? void 0 : crypto2.createHmac) {\n    const hmac = crypto2.createHmac(algorithm, globalScope.Buffer.from(key));\n    hmac.update(globalScope.Buffer.from(message));\n    return hmac.digest();\n  } else {\n    throw new Error(\"Missing HMAC function\");\n  }\n};\nvar ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nvar base32Decode = (str) => {\n  str = str.replace(/ /g, \"\");\n  let end = str.length;\n  while (str[end - 1] === \"=\") --end;\n  str = (end < str.length ? str.substring(0, end) : str).toUpperCase();\n  const buf = new ArrayBuffer(str.length * 5 / 8 | 0);\n  const arr = new Uint8Array(buf);\n  let bits = 0;\n  let value = 0;\n  let index = 0;\n  for (let i = 0; i < str.length; i++) {\n    const idx = ALPHABET.indexOf(str[i]);\n    if (idx === -1) throw new TypeError(`Invalid character found: ${str[i]}`);\n    value = value << 5 | idx;\n    bits += 5;\n    if (bits >= 8) {\n      bits -= 8;\n      arr[index++] = value >>> bits;\n    }\n  }\n  return arr;\n};\nvar base32Encode = (arr) => {\n  let bits = 0;\n  let value = 0;\n  let str = \"\";\n  for (let i = 0; i < arr.length; i++) {\n    value = value << 8 | arr[i];\n    bits += 8;\n    while (bits >= 5) {\n      str += ALPHABET[value >>> bits - 5 & 31];\n      bits -= 5;\n    }\n  }\n  if (bits > 0) {\n    str += ALPHABET[value << 5 - bits & 31];\n  }\n  return str;\n};\nvar hexDecode = (str) => {\n  str = str.replace(/ /g, \"\");\n  const buf = new ArrayBuffer(str.length / 2);\n  const arr = new Uint8Array(buf);\n  for (let i = 0; i < str.length; i += 2) {\n    arr[i / 2] = parseInt(str.substring(i, i + 2), 16);\n  }\n  return arr;\n};\nvar hexEncode = (arr) => {\n  let str = \"\";\n  for (let i = 0; i < arr.length; i++) {\n    const hex = arr[i].toString(16);\n    if (hex.length === 1) str += \"0\";\n    str += hex;\n  }\n  return str.toUpperCase();\n};\nvar latin1Decode = (str) => {\n  const buf = new ArrayBuffer(str.length);\n  const arr = new Uint8Array(buf);\n  for (let i = 0; i < str.length; i++) {\n    arr[i] = str.charCodeAt(i) & 255;\n  }\n  return arr;\n};\nvar latin1Encode = (arr) => {\n  let str = \"\";\n  for (let i = 0; i < arr.length; i++) {\n    str += String.fromCharCode(arr[i]);\n  }\n  return str;\n};\nvar ENCODER = globalScope.TextEncoder ? new globalScope.TextEncoder() : null;\nvar DECODER = globalScope.TextDecoder ? new globalScope.TextDecoder() : null;\nvar utf8Decode = (str) => {\n  if (!ENCODER) {\n    throw new Error(\"Encoding API not available\");\n  }\n  return ENCODER.encode(str);\n};\nvar utf8Encode = (arr) => {\n  if (!DECODER) {\n    throw new Error(\"Encoding API not available\");\n  }\n  return DECODER.decode(arr);\n};\nvar randomBytes2 = (size) => {\n  var _a13;\n  if (crypto2 == null ? void 0 : crypto2.randomBytes) {\n    return crypto2.randomBytes(size);\n  } else if ((_a13 = globalScope.crypto) == null ? void 0 : _a13.getRandomValues) {\n    return globalScope.crypto.getRandomValues(new Uint8Array(size));\n  } else {\n    throw new Error(\"Cryptography API not available\");\n  }\n};\nvar Secret = class _Secret {\n  /**\n  * Converts a Latin-1 string to a Secret object.\n  * @param {string} str Latin-1 string.\n  * @returns {Secret} Secret object.\n  */\n  static fromLatin1(str) {\n    return new _Secret({\n      buffer: latin1Decode(str).buffer\n    });\n  }\n  /**\n  * Converts an UTF-8 string to a Secret object.\n  * @param {string} str UTF-8 string.\n  * @returns {Secret} Secret object.\n  */\n  static fromUTF8(str) {\n    return new _Secret({\n      buffer: utf8Decode(str).buffer\n    });\n  }\n  /**\n  * Converts a base32 string to a Secret object.\n  * @param {string} str Base32 string.\n  * @returns {Secret} Secret object.\n  */\n  static fromBase32(str) {\n    return new _Secret({\n      buffer: base32Decode(str).buffer\n    });\n  }\n  /**\n  * Converts a hexadecimal string to a Secret object.\n  * @param {string} str Hexadecimal string.\n  * @returns {Secret} Secret object.\n  */\n  static fromHex(str) {\n    return new _Secret({\n      buffer: hexDecode(str).buffer\n    });\n  }\n  /**\n  * Secret key buffer.\n  * @deprecated For backward compatibility, the \"bytes\" property should be used instead.\n  * @type {ArrayBufferLike}\n  */\n  get buffer() {\n    return this.bytes.buffer;\n  }\n  /**\n  * Latin-1 string representation of secret key.\n  * @type {string}\n  */\n  get latin1() {\n    Object.defineProperty(this, \"latin1\", {\n      enumerable: true,\n      writable: false,\n      configurable: false,\n      value: latin1Encode(this.bytes)\n    });\n    return this.latin1;\n  }\n  /**\n  * UTF-8 string representation of secret key.\n  * @type {string}\n  */\n  get utf8() {\n    Object.defineProperty(this, \"utf8\", {\n      enumerable: true,\n      writable: false,\n      configurable: false,\n      value: utf8Encode(this.bytes)\n    });\n    return this.utf8;\n  }\n  /**\n  * Base32 string representation of secret key.\n  * @type {string}\n  */\n  get base32() {\n    Object.defineProperty(this, \"base32\", {\n      enumerable: true,\n      writable: false,\n      configurable: false,\n      value: base32Encode(this.bytes)\n    });\n    return this.base32;\n  }\n  /**\n  * Hexadecimal string representation of secret key.\n  * @type {string}\n  */\n  get hex() {\n    Object.defineProperty(this, \"hex\", {\n      enumerable: true,\n      writable: false,\n      configurable: false,\n      value: hexEncode(this.bytes)\n    });\n    return this.hex;\n  }\n  /**\n  * Creates a secret key object.\n  * @param {Object} [config] Configuration options.\n  * @param {ArrayBufferLike} [config.buffer] Secret key buffer.\n  * @param {number} [config.size=20] Number of random bytes to generate, ignored if 'buffer' is provided.\n  */\n  constructor({ buffer, size = 20 } = {}) {\n    this.bytes = typeof buffer === \"undefined\" ? randomBytes2(size) : new Uint8Array(buffer);\n    Object.defineProperty(this, \"bytes\", {\n      enumerable: true,\n      writable: false,\n      configurable: false,\n      value: this.bytes\n    });\n  }\n};\nvar timingSafeEqual2 = (a, b) => {\n  if (crypto2 == null ? void 0 : crypto2.timingSafeEqual) {\n    return crypto2.timingSafeEqual(globalScope.Buffer.from(a), globalScope.Buffer.from(b));\n  } else {\n    if (a.length !== b.length) {\n      throw new TypeError(\"Input strings must have the same length\");\n    }\n    let i = -1;\n    let out = 0;\n    while (++i < a.length) {\n      out |= a.charCodeAt(i) ^ b.charCodeAt(i);\n    }\n    return out === 0;\n  }\n};\nvar HOTP = class _HOTP {\n  /**\n  * Default configuration.\n  * @type {{\n  *   issuer: string,\n  *   label: string,\n  *   issuerInLabel: boolean,\n  *   algorithm: string,\n  *   digits: number,\n  *   counter: number\n  *   window: number\n  * }}\n  */\n  static get defaults() {\n    return {\n      issuer: \"\",\n      label: \"OTPAuth\",\n      issuerInLabel: true,\n      algorithm: \"SHA1\",\n      digits: 6,\n      counter: 0,\n      window: 1\n    };\n  }\n  /**\n  * Generates an HOTP token.\n  * @param {Object} config Configuration options.\n  * @param {Secret} config.secret Secret key.\n  * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n  * @param {number} [config.digits=6] Token length.\n  * @param {number} [config.counter=0] Counter value.\n  * @returns {string} Token.\n  */\n  static generate({ secret, algorithm = _HOTP.defaults.algorithm, digits = _HOTP.defaults.digits, counter = _HOTP.defaults.counter }) {\n    const digest = hmacDigest(algorithm, secret.bytes, uintDecode(counter));\n    const offset = digest[digest.byteLength - 1] & 15;\n    const otp = ((digest[offset] & 127) << 24 | (digest[offset + 1] & 255) << 16 | (digest[offset + 2] & 255) << 8 | digest[offset + 3] & 255) % __pow(10, digits);\n    return otp.toString().padStart(digits, \"0\");\n  }\n  /**\n  * Generates an HOTP token.\n  * @param {Object} [config] Configuration options.\n  * @param {number} [config.counter=this.counter++] Counter value.\n  * @returns {string} Token.\n  */\n  generate({ counter = this.counter++ } = {}) {\n    return _HOTP.generate({\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      counter\n    });\n  }\n  /**\n  * Validates an HOTP token.\n  * @param {Object} config Configuration options.\n  * @param {string} config.token Token value.\n  * @param {Secret} config.secret Secret key.\n  * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n  * @param {number} [config.digits=6] Token length.\n  * @param {number} [config.counter=0] Counter value.\n  * @param {number} [config.window=1] Window of counter values to test.\n  * @returns {number|null} Token delta or null if it is not found in the search window, in which case it should be considered invalid.\n  */\n  static validate({ token, secret, algorithm, digits = _HOTP.defaults.digits, counter = _HOTP.defaults.counter, window: window2 = _HOTP.defaults.window }) {\n    if (token.length !== digits) return null;\n    let delta = null;\n    const check = (i) => {\n      const generatedToken = _HOTP.generate({\n        secret,\n        algorithm,\n        digits,\n        counter: i\n      });\n      if (timingSafeEqual2(token, generatedToken)) {\n        delta = i - counter;\n      }\n    };\n    check(counter);\n    for (let i = 1; i <= window2 && delta === null; ++i) {\n      check(counter - i);\n      if (delta !== null) break;\n      check(counter + i);\n      if (delta !== null) break;\n    }\n    return delta;\n  }\n  /**\n  * Validates an HOTP token.\n  * @param {Object} config Configuration options.\n  * @param {string} config.token Token value.\n  * @param {number} [config.counter=this.counter] Counter value.\n  * @param {number} [config.window=1] Window of counter values to test.\n  * @returns {number|null} Token delta or null if it is not found in the search window, in which case it should be considered invalid.\n  */\n  validate({ token, counter = this.counter, window: window2 }) {\n    return _HOTP.validate({\n      token,\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      counter,\n      window: window2\n    });\n  }\n  /**\n  * Returns a Google Authenticator key URI.\n  * @returns {string} URI.\n  */\n  toString() {\n    const e = encodeURIComponent;\n    return `otpauth://hotp/${this.issuer.length > 0 ? this.issuerInLabel ? `${e(this.issuer)}:${e(this.label)}?issuer=${e(this.issuer)}&` : `${e(this.label)}?issuer=${e(this.issuer)}&` : `${e(this.label)}?`}secret=${e(this.secret.base32)}&algorithm=${e(this.algorithm)}&digits=${e(this.digits)}&counter=${e(this.counter)}`;\n  }\n  /**\n  * Creates an HOTP object.\n  * @param {Object} [config] Configuration options.\n  * @param {string} [config.issuer=''] Account provider.\n  * @param {string} [config.label='OTPAuth'] Account label.\n  * @param {boolean} [config.issuerInLabel=true] Include issuer prefix in label.\n  * @param {Secret|string} [config.secret=Secret] Secret key.\n  * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n  * @param {number} [config.digits=6] Token length.\n  * @param {number} [config.counter=0] Initial counter value.\n  */\n  constructor({ issuer = _HOTP.defaults.issuer, label = _HOTP.defaults.label, issuerInLabel = _HOTP.defaults.issuerInLabel, secret = new Secret(), algorithm = _HOTP.defaults.algorithm, digits = _HOTP.defaults.digits, counter = _HOTP.defaults.counter } = {}) {\n    this.issuer = issuer;\n    this.label = label;\n    this.issuerInLabel = issuerInLabel;\n    this.secret = typeof secret === \"string\" ? Secret.fromBase32(secret) : secret;\n    this.algorithm = canonicalizeAlgorithm(algorithm);\n    this.digits = digits;\n    this.counter = counter;\n  }\n};\nvar TOTP = class _TOTP {\n  /**\n  * Default configuration.\n  * @type {{\n  *   issuer: string,\n  *   label: string,\n  *   issuerInLabel: boolean,\n  *   algorithm: string,\n  *   digits: number,\n  *   period: number\n  *   window: number\n  * }}\n  */\n  static get defaults() {\n    return {\n      issuer: \"\",\n      label: \"OTPAuth\",\n      issuerInLabel: true,\n      algorithm: \"SHA1\",\n      digits: 6,\n      period: 30,\n      window: 1\n    };\n  }\n  /**\n  * Generates a TOTP token.\n  * @param {Object} config Configuration options.\n  * @param {Secret} config.secret Secret key.\n  * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n  * @param {number} [config.digits=6] Token length.\n  * @param {number} [config.period=30] Token time-step duration.\n  * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n  * @returns {string} Token.\n  */\n  static generate({ secret, algorithm, digits, period = _TOTP.defaults.period, timestamp = Date.now() }) {\n    return HOTP.generate({\n      secret,\n      algorithm,\n      digits,\n      counter: Math.floor(timestamp / 1e3 / period)\n    });\n  }\n  /**\n  * Generates a TOTP token.\n  * @param {Object} [config] Configuration options.\n  * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n  * @returns {string} Token.\n  */\n  generate({ timestamp = Date.now() } = {}) {\n    return _TOTP.generate({\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      period: this.period,\n      timestamp\n    });\n  }\n  /**\n  * Validates a TOTP token.\n  * @param {Object} config Configuration options.\n  * @param {string} config.token Token value.\n  * @param {Secret} config.secret Secret key.\n  * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n  * @param {number} [config.digits=6] Token length.\n  * @param {number} [config.period=30] Token time-step duration.\n  * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n  * @param {number} [config.window=1] Window of counter values to test.\n  * @returns {number|null} Token delta or null if it is not found in the search window, in which case it should be considered invalid.\n  */\n  static validate({ token, secret, algorithm, digits, period = _TOTP.defaults.period, timestamp = Date.now(), window: window2 }) {\n    return HOTP.validate({\n      token,\n      secret,\n      algorithm,\n      digits,\n      counter: Math.floor(timestamp / 1e3 / period),\n      window: window2\n    });\n  }\n  /**\n  * Validates a TOTP token.\n  * @param {Object} config Configuration options.\n  * @param {string} config.token Token value.\n  * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n  * @param {number} [config.window=1] Window of counter values to test.\n  * @returns {number|null} Token delta or null if it is not found in the search window, in which case it should be considered invalid.\n  */\n  validate({ token, timestamp, window: window2 }) {\n    return _TOTP.validate({\n      token,\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      period: this.period,\n      timestamp,\n      window: window2\n    });\n  }\n  /**\n  * Returns a Google Authenticator key URI.\n  * @returns {string} URI.\n  */\n  toString() {\n    const e = encodeURIComponent;\n    return `otpauth://totp/${this.issuer.length > 0 ? this.issuerInLabel ? `${e(this.issuer)}:${e(this.label)}?issuer=${e(this.issuer)}&` : `${e(this.label)}?issuer=${e(this.issuer)}&` : `${e(this.label)}?`}secret=${e(this.secret.base32)}&algorithm=${e(this.algorithm)}&digits=${e(this.digits)}&period=${e(this.period)}`;\n  }\n  /**\n  * Creates a TOTP object.\n  * @param {Object} [config] Configuration options.\n  * @param {string} [config.issuer=''] Account provider.\n  * @param {string} [config.label='OTPAuth'] Account label.\n  * @param {boolean} [config.issuerInLabel=true] Include issuer prefix in label.\n  * @param {Secret|string} [config.secret=Secret] Secret key.\n  * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n  * @param {number} [config.digits=6] Token length.\n  * @param {number} [config.period=30] Token time-step duration.\n  */\n  constructor({ issuer = _TOTP.defaults.issuer, label = _TOTP.defaults.label, issuerInLabel = _TOTP.defaults.issuerInLabel, secret = new Secret(), algorithm = _TOTP.defaults.algorithm, digits = _TOTP.defaults.digits, period = _TOTP.defaults.period } = {}) {\n    this.issuer = issuer;\n    this.label = label;\n    this.issuerInLabel = issuerInLabel;\n    this.secret = typeof secret === \"string\" ? Secret.fromBase32(secret) : secret;\n    this.algorithm = canonicalizeAlgorithm(algorithm);\n    this.digits = digits;\n    this.period = period;\n  }\n};\n\n// src/index.ts\nvar _a12, _b;\nvar ALLOWED_EXECUTABLES = (_b = (_a12 = process.env[\"ALLOWED_EXECUTABLES\"]) == null ? void 0 : _a12.split(\",\")) != null ? _b : [];\nvar TIMEOUT = Number(process.env[\"TIMEOUT\"]) || 1e4;\nvar SECRET = process.env[\"SECRET\"];\nvar tokens = /* @__PURE__ */ new Set();\nvar server = new Hono2().get(\"/health\", (ctx) => __async(void 0, null, function* () {\n  return ctx.text(\"OK\");\n})).get(\"/auth/:code?\", (ctx) => __async(void 0, null, function* () {\n  const { code } = ctx.req.param();\n  if (!SECRET || !code) {\n    const secret = new Secret().base32;\n    return ctx.text(secret);\n  }\n  const totp = new TOTP({ secret: SECRET });\n  if (!totp.validate({ token: code })) {\n    return ctx.text(\"Invalid code\", 403);\n  }\n  const token = (0, import_node_crypto.randomUUID)();\n  tokens.add(token);\n  setTimeout(() => tokens.delete(token), 18e5);\n  return ctx.text(token);\n})).get(\"/:exec/*\", (ctx) => __async(void 0, null, function* () {\n  try {\n    const { exec } = ctx.req.param();\n    if (!ALLOWED_EXECUTABLES.includes(exec)) {\n      return ctx.text(\"Not allowed\", 403);\n    }\n    const args = ctx.req.url.split(\"/\").slice(4).map((arg) => decodeURIComponent(arg));\n    const { stdout, stderr, token } = ctx.req.query();\n    if (token && !tokens.has(token)) {\n      return ctx.text(\"Invalid token\", 403);\n    }\n    return streamText(\n      ctx,\n      (stream2) => new Promise((resolve, reject) => {\n        const child = (0, import_node_child_process.spawn)(exec, args, {\n          env: process.env\n        });\n        const timeout = setTimeout(() => {\n          stream2.abort();\n        }, TIMEOUT);\n        child.on(\"close\", () => {\n          clearTimeout(timeout);\n          resolve();\n        });\n        child.on(\"error\", () => {\n          clearTimeout(timeout);\n          reject();\n        });\n        let last = Promise.resolve();\n        const handler = (data) => {\n          last = new Promise((resolve2) => __async(void 0, null, function* () {\n            yield last;\n            stream2.write(data.toString()).finally(resolve2);\n          }));\n        };\n        (stdout !== void 0 || stdout === stderr) && child.stdout.on(\"data\", handler);\n        (stderr !== void 0 || stdout === stderr) && child.stderr.on(\"data\", handler);\n      }),\n      (err, stream2) => __async(void 0, null, function* () {\n        yield stream2.write(String(err));\n        stream2.abort();\n      })\n    );\n  } catch (e) {\n    return ctx.text(e.message, 500);\n  }\n}));\nvar port = Number(process.env[\"PORT\"]) || 3e3;\nserve({\n  fetch: server.fetch.bind(server),\n  port\n});\n/*! Bundled license information:\n\notpauth/dist/otpauth.node.mjs:\n  (*! otpauth 9.3.6 | (c) Héctor Molinero Fernández | MIT | https://github.com/hectorm/otpauth *)\n*/\n"],"names":[],"sourceRoot":""}